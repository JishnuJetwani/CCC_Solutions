#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
using namespace std;
int main(){
    int N;
    cin >> N;
    unordered_map <int, string> umap;
    unordered_map <int, string> umap1;
    vector <int> all(0);
    for (int i = 0; i < N; ++i){
        string name;
        int R, S, D;
        cin >> name >> R >> S >> D;
        int value = (2*R) + (3*S) + D;
        if (umap.count(value)){
            umap1[value] = name;
        }else{
            umap[value] = name;
        }
        all.push_back(value);
    }
    sort(all.begin(), all.end(), greater<int>());
    if (N == 1){
        cout << umap[all[0]] << endl;
    }else{
        if (all[0] == all[1]){
            string name1 = umap[all[0]];
            string name2 = umap1[all[1]];
            int name1_len = name1.size();
            int name2_len = name2.size();
            if (name1_len > name2_len){
                cout << name2 << endl;
                cout << name1 << endl;
            }else{
                cout << name1 << endl;
                cout << name2 << endl;
            }
        }if (all[0] != all[1]){
            cout << umap[all[0]] << endl;
            cout << umap[all[1]] << endl;
        }
    }   
    }
