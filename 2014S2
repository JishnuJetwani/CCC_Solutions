#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;
int main(){
    int N; cin >> N;
    vector<string> all(N);
    vector <string> all1(N);
    for (int i = 0; i < N; ++i) cin >> all[i];
    for (int i = 0; i < N; ++i) cin >> all1[i];
    unordered_map <string, string> umap;
    //compare the ith value of each vector.
    //before importing to map, check if the value is in the map
    //if it is, check if the pair is consistent.
    bool good = true;
    for (int i = 0; i < N; ++i){
        string X = all[i];
        string Y = all1[i];
        if (X == Y){
            good = false;
            break;
        }
        if (!umap.count(all[i]) && !umap.count(all1[i])){
            umap[all[i]] = all1[i];
        }else{
            if (umap.count(all[i])){
                string Z = umap[all[i]];
                if (Z != Y){
                    good = false;
                    break;
                }
            }else{
                string Z = umap[all1[i]];
                if (Z != X){
                    good = false;
                    break;
                }
            }
        }
    }
    if (good){
        cout << "good" << endl;
    }else{
        cout << "bad" << endl;
     }
}
